#! /bin/bash
#
# Generated by the utility: util/collect_git_checked_out_branch_recusively.sh 
#
# Checkout each git repository to the given branch/commit or list them
#

mode=h;
while getopts ":hlc" opt ; do
  #echo opt+arg = "$opt$OPTARG"
  case "$opt$OPTARG" in
  l )
    mode=h;
    ;;

  c )
    mode=c;
    ;;

  r )
    mode=r;
    ;;

  * )
    cat <<EOH
checkout_to_known_git_branches_recursive.sh options

Options:

-h      : print this help 
-l      : LIST the branch/commit for each git repository (directory) registered in this script.
-c      : CHECKOUT each git repository to the BRANCH registered in this script.
-r      : CHECKOUT/REVERT each git repository to the COMMIT registered in this script.

Note:

Use the '-r' option to set each repository to an exact commit position, which is useful if,
for instance, you wish to reproduce this registered previous software state (which may 
represent a software release) which you wish to analyze/debug.

EOH
    exit 1;
    ;;
  esac
done

if test "$mode" = "h" ; then
  cat <<EOH

Git repository directory                    :: commit hash                         / branch name
--------------------------------------------::--------------------------------------------------
EOH
fi



# args: DIR COMMIT [BRANCH]
git_repo_checkout_branch() {
  if test "$mode" = "c" || test "$mode" = "r" ; then
    if test -d "$1" ; then
      pushd "$1"                                                               2> /dev/null  > /dev/null
      if test "$mode" = "c" && test -n "$3" ; then
        # make sure the branch is created locally and is a tracking branch:
        git branch --track "$3" "remotes/origin/$3"                            2> /dev/null  > /dev/null
        git checkout "$3"
      else
        git checkout "$2"
      fi
      popd                                                                     2> /dev/null  > /dev/null
    fi
  else
    if test -d "$1" ; then
      printf "%-43s :: %s / %s\n" "$1" "$2" "$3"
    else
      printf "%-43s :: %s / %s\n" "[DIRECTORY DOES NOT EXIST!] $1" "$2" "$3"
    fi
  fi
}


#
# Make sure we switch to the utility directory as all the relative paths for the repositories
# are based off that path!
#
pushd $(dirname $0)                                                            2> /dev/null  > /dev/null



#
# The registered repositories:
#

git_repo_checkout_branch "../_key-material-for-administrators" ec70f681bba38a3a23fb353ee0c57073c9426ba7 master
git_repo_checkout_branch "../dummy_filler" 74e5a871952d6d121471a8b30d0c03b86fd0e0a5 master
git_repo_checkout_branch "../frontend/UI-components" ee25c3065aa737fd3eff5f91244f8fb1b23fe15d master
git_repo_checkout_branch "../frontend/application" 2867b796aa9b6a743b13529577a9cc5c62756afa master
git_repo_checkout_branch "../frontend/framework" 1d8297eef2335a4579b5d1f894fa364b4f11bb2d master
git_repo_checkout_branch "../frontend/kernel" e8979d485b48bcbfc2debe292600638c9e588577 master
git_repo_checkout_branch "../frontend/native-mobile-apps" c1145f5f3c2ea4f65c6af1b79d0e5865052d3ff0 master
git_repo_checkout_branch "../laboratory/data-visualization" 34916ce13dfbe3443e6050cdc29af4532bda8442 master
git_repo_checkout_branch "../laboratory/gonzo-research" 94f2d61e8b3e9856a38c649dacfa81e7301069a9 master
git_repo_checkout_branch "../laboratory/site-design" 6b6f23721a2397f7bcca0994dd5004cd11485362 master
git_repo_checkout_branch "../lib" 1ee7e2f75bb61d51423f81cb45862022c8580e73 master
git_repo_checkout_branch "../lib_private" ece3771d80b7b2553b7f026248627b3c3edd06d5 master
git_repo_checkout_branch "../server/basic_spa" 40687ef38a98b9e61fb2b61b856277977131c20c master
git_repo_checkout_branch "../server/codebase-IP-stripped" f89f461c4ff06940ea83ae0e388e5c01eb205aa3 master
git_repo_checkout_branch "../server/v2" d7d2563d0d0a4aafc657db338d109651de44fee3 master
git_repo_checkout_branch "../server/v3" 9ba88bccc20c678df36bfc91628e2c171987b234 master
git_repo_checkout_branch "../server/yii2_app" 35981d0bbefa794ae2954e01f5ec4d290e7a903e master
git_repo_checkout_branch "../testing/test-automation" 37321d04046224bc7bb0e3be4155ac5ee7c288d6 master
git_repo_checkout_branch "../testing/test-data" 9f01a50b0ced4849ef7e1480155143a736c43cd6 master
git_repo_checkout_branch "wsclean" 78e56497930f686e10659dd8a1adf3a9681bca72 master

# --- all done ---

popd                                                                           2> /dev/null  > /dev/null

